import customtkinter as ctk
from datetime import datetime
from socket import socket, AF_INET, SOCK_STREAM
from threading import Thread

socket_client = socket(AF_INET, SOCK_STREAM)
socket_client.connect(('7.tcp.eu.ngrok.io', 17497))

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–º–∏
ctk.set_appearance_mode("System")  # Light / Dark / System
ctk.set_default_color_theme("blue")

# –ì–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ
app = ctk.CTk()
app.geometry("650x520")
app.title("LogiTalk")


# ======= –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è =======

def start_chat():
    username = username_entry.get().strip()
    if username:
        global current_user
        current_user = username
        register_frame.pack_forget()
        chat_label.configure(text=f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {username}")
        chat_frame.pack(fill="both", expand=True)
        send_system_message(f"–ü—Ä–∏–≤—ñ—Ç, {username}! üëã")


register_frame = ctk.CTkFrame(app)
register_frame.pack(fill="both", expand=True)

username_label = ctk.CTkLabel(register_frame, text="–í–≤–µ–¥—ñ—Ç—å —ñ–º‚Äô—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:")
username_label.pack(pady=10)

username_entry = ctk.CTkEntry(register_frame, placeholder_text="–í–∞—à–µ —ñ–º‚Äô—è")
username_entry.pack(pady=10)

login_button = ctk.CTkButton(register_frame, text="–£–≤—ñ–π—Ç–∏", command=start_chat)
login_button.pack(pady=10)

# ======= –ß–∞—Ç-–≤—ñ–∫–Ω–æ =======

chat_frame = ctk.CTkFrame(app)

# –õ—ñ–≤–µ –º–µ–Ω—é
side_menu = ctk.CTkFrame(chat_frame, width=120)
side_menu.pack(side="left", fill="y", padx=5, pady=5)


# –ö–Ω–æ–ø–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è —á–∞—Ç—É
def clear_chat():
    chat_box.configure(state="normal")
    chat_box.delete("1.0", "end")
    chat_box.configure(state="disabled")


clear_button = ctk.CTkButton(side_menu, text="–û—á–∏—Å—Ç–∏—Ç–∏", command=clear_chat)
clear_button.pack(pady=10)


# –ü–µ—Ä–µ–º–∏–∫–∞—á —Ç–µ–º–∏
def toggle_theme():
    mode = ctk.get_appearance_mode()
    if mode == "Light":
        ctk.set_appearance_mode("Dark")
    else:
        ctk.set_appearance_mode("Light")


theme_button = ctk.CTkButton(side_menu, text="–ó–º—ñ–Ω–∏—Ç–∏ —Ç–µ–º—É", command=toggle_theme)
theme_button.pack(pady=10)

# –í–∏–≤—ñ–¥ —ñ–º–µ–Ω—ñ
chat_label = ctk.CTkLabel(chat_frame, text="–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: ")
chat_label.pack(pady=5)

# –ü–æ–ª–µ –¥–ª—è —á–∞—Ç—É
chat_box = ctk.CTkTextbox(chat_frame, width=450, height=300)
chat_box.pack(pady=10)
chat_box.insert("end", "üëã –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ LogiTalk!\n")
chat_box.configure(state="disabled")

# –ü–æ–ª–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è
message_entry = ctk.CTkEntry(chat_frame, width=400, placeholder_text="–í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
message_entry.pack(pady=5)


# –§—É–Ω–∫—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
def send_message():
    message = message_entry.get().strip()
    if message:
        now = datetime.now().strftime("%H:%M")
        chat_box.configure(state="normal")
        chat_box.insert("end", f"[{now}] {current_user}: {message}\n")
        chat_box.configure(state="disabled")
        message_entry.delete(0, "end")
        try:
            socket_client.send(message.encode())
        except:
            pass


# –ö–Ω–æ–ø–∫–∞ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏
send_button = ctk.CTkButton(chat_frame, text="–ù–∞–¥—ñ—Å–ª–∞—Ç–∏", command=send_message)
send_button.pack(pady=5)


# –°–∏—Å—Ç–µ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–±–µ–∑ –∞–≤—Ç–æ—Ä–∞)
def send_system_message(text):
    now = datetime.now().strftime("%H:%M")
    chat_box.configure(state="normal")
    chat_box.insert("end", f"[{now}] üü¢ {text}\n")
    chat_box.configure(state="disabled")


# –ó–∞–ø—É—Å–∫
current_user = "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á"
name = '–ú–∞—Ä–∫–æ'
socket_client.send(name.encode())


def recv_message():
    while True:
        try:
            msg = socket_client.recv(1024).decode()
            if msg:
                send_system_message(msg)
        except:
            pass


Thread(target=recv_message, daemon=True).start()
app.mainloop()
